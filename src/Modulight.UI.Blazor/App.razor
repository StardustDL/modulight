@using System.Reflection
@inject IBlazorUIProvider UIProvider
@inject IOptions<BlazorUiModuleOption> Options

@if (Options.Value.RenderUIResources)
{
    <Modulight.Modules.Client.RazorComponents.UI.ResourceDeclare />
}

<Router AppAssembly="@UIProvider.AppAssembly"
        PreferExactMatches="@true" AdditionalAssemblies="@AdditionalAssemblies"
        OnNavigateAsync="@OnNavigateAsync" NotFound="@UIProvider.RouterNotFound" Navigating="@UIProvider.RouterNavigating">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@UIProvider.DefaultLayout" />
    </Found>
</Router>

@code {
    List<Assembly> AdditionalAssemblies = new List<Assembly>();

    protected async Task OnNavigateAsync(NavigationContext context)
    {
        AdditionalAssemblies.Clear();

        await UIProvider.OnNavigateAsync(context);

        AdditionalAssemblies.AddRange(UIProvider.AdditionalAssemblies.Where(x => x != UIProvider.AppAssembly));
    }
}