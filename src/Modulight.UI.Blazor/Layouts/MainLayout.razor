@inherits LayoutComponentBase
@inject IBlazorUIProvider UIProvider
@inject IModuleHost ModuleHost
@inject IRazorComponentClientModuleCollection RazorComponentClientModuleCollection
@inject IServiceProvider ServiceProvider
@inject NavigationManager NavigationManager

<AntDesign.Layout Style="min-height: 100vh; background: initial;">
    <Sider Collapsible Theme="SiderTheme.Light" Breakpoint="BreakpointType.Xl" OnCollapse="OnCollapse">
        <Menu Mode="MenuMode.Inline" Theme="MenuTheme.Light">
            <MenuItem Class="text-center p-0">
                <MenuLink Href="/">@UIProvider.SiteInfo.Name</MenuLink>
            </MenuItem>
            @foreach (var module in UIProvider.GetVisibleClientModules())
            {
                var moduleTitle = (module.Manifest.DisplayName ?? module.Manifest.Name ?? "");
                <MenuItem OnClick="@(()=>OnClickMenuItem(module))">
                    <Tooltip Title="@moduleTitle">
                        <AntModuleIcon Module="module"></AntModuleIcon>
                        <MenuLink Href="@GetRootPath(module)" hidden="@IsCollapsed">@moduleTitle</MenuLink>
                    </Tooltip>
                </MenuItem>
            }
        </Menu>
    </Sider>
    <AntDesign.Layout Style="background: initial;">
        <Content>@Body</Content>
        <Footer Class="text-center p-1">
            @if (UIProvider.Footer is not null)
            {
                @UIProvider.Footer
            }
        </Footer>
    </AntDesign.Layout>
</AntDesign.Layout>

<BackTop></BackTop>

@code{
    bool IsCollapsed { get; set; } = false;

    void OnCollapse(bool isCollapsed)
    {
        IsCollapsed = isCollapsed;
    }

    string GetRootPath(IRazorComponentClientModule module)
    {
        var provider = module.GetPageProvider(ModuleHost);
        if (provider is not null)
        {
            return provider.RootPath;
        }
        else
        {
            return "";
        }
    }

    void OnClickMenuItem(IRazorComponentClientModule module)
    {
        var provider = module.GetPageProvider(ModuleHost);
        if (provider is not null)
        {
            NavigationManager.NavigateTo(provider.RootPath);
        }
    }
}