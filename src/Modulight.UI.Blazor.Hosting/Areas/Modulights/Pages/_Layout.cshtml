@namespace Modulight.UI.Blazor.Hosting.Areas.Modulights.Pages
@using Modulight.UI.Blazor.Hosting
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Options;
@inject IOptions<BlazorUiHostingModuleOption> Options
@inject Modulight.UI.Blazor.Services.IBlazorUIProvider UIProvider

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Loading... - @UIProvider.SiteInfo.Name</title>
    <base href="~/" />
    <link href="@(UIProvider.AppAssembly.GetName().Name).styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="@(Options.Value.GetRenderMode())" />
</head>
<body>
    <component type="@typeof(Modulight.Modules.Client.RazorComponents.UI.ResourceDeclare)" render-mode="Static" />

    @RenderBody()

    <div id="blazor-error-ui" class="alert alert-danger mdi mdi-alert" role="alert" style="display: none">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    @switch (Options.Value.HostingModel)
    {
        case HostingModel.Server:
            <script src="_framework/blazor.server.js"></script>
            break;
        case HostingModel.Client:
            <script src="_framework/blazor.webassembly.js"></script>
            if (Options.Value.EnableServiceWorker)
            {
                <script>navigator.serviceWorker.register('service-worker.js');</script>
            }
            break;
        case HostingModel.WebView:
            <script src="_framework/blazor.webview.js"></script>
            break;
    }
</body>
</html>
